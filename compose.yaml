services:
  rosmaster:
    image: ros:noetic-ros-core
    command: roscore
    restart: unless-stopped
    network_mode: host
  base_ros_service:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - rosmaster
    network_mode: host
    profiles: [_]
    restart: unless-stopped
  scanner:
    extends: base_ros_service
    command: roslaunch --wait rplidar_ros rplidar_a2m12.launch
    profiles: [matchplay]
    devices:
      - /dev/ttyUSB0 # dont forget to make sure this has proper permissions
  filter:
    extends: base_ros_service
    command: roslaunch --wait laser_filter t_laser_filter.launch
    profiles: [slam, olarta]
  slam:
    extends: base_ros_service
    command: roslaunch --wait slam_toolbox lifelong.launch
    profiles: [slam]
    depends_on:
      - filter
  olarta:
    extends: base_ros_service
    command: roslaunch --wait olarta localize.launch
    profiles: [olarta]
    depends_on:
      - filter
  nt_bridge:
    extends: base_ros_service
    command: roslaunch --wait frc_basics ros_bridge.launch hostname:=nt.server
    profiles: [matchplay, sim]
    extra_hosts:
      - "nt.server:${NT_SERVER:-host-gateway}"
    restart: unless-stopped
  bagger:
    extends: base_ros_service
    command: roslaunch --wait bag_manager auto_bagger.launch
    profiles: [matchplay]
    volumes:
      - bags:/bags
  sim:
    extends: base_ros_service
    command: roslaunch --wait frc_sim_gazebo frc_sim.launch
    profiles: [sim]
    environment:
      DISPLAY: ${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
  photonvision:
    build:
      context: photonvision
      dockerfile: Dockerfile
    profiles: [photonvision]
    extra_hosts:
      - "nt.server:${NT_SERVER:-host-gateway}"
    ports:
      - 5800:5800
      - 1181-1190
    devices:
      - ${CAMERA_0:-/dev/null}
    volumes:
      - photonvision_config:/opt/photonvision/photonvision_config
    restart: unless-stopped
  portainer:  # Web UI managing containers
    image: portainer/portainer-ce:2.20.3
    ports:
      - 5801:9443
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
  filebrowser: # Web UI for downloading/uploading files
    image: filebrowser/filebrowser
    ports:
      - 5802:80
    volumes:
      - bags:/srv/bags
    restart: always
volumes:
  data:
  bags:
  photonvision_config:
networks:
  ros:
    driver: bridge
